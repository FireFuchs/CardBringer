//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Linq;

namespace CardBringer2
{
    using System;
    using System.Collections.Generic;
    
    public partial class kosharica
    {
        public int idKosarica { get; set; }
        public int idKorisnika { get; set; }
        public int idOglas { get; set; }
        public int kolicina { get; set; }
        public System.DateTime datum { get; set; }
        public byte kupljeno { get; set; }

        //public static kosharica Dohvati(int idKosarica)
        //{
        //    kosharica k = new kosharica();
        //    using (var context = new CardBringerDBEntities())
        //    {
        //        k = context.kosharica.SingleOrDefault(c => c.idKosarica == idKosarica);
        //    }
        //    return k;
        //}
        public void Spremi()
        {
            this.datum = DateTime.Today;
            this.kupljeno = 0;
            this.idKorisnika = korisnik.PrijavljeniKorisnik.idKorisnika;
            
            using (var context = new CardBringerDBEntities())
            {
                var result = context.kosharica.SingleOrDefault(c => c.idOglas == this.idOglas && c.kupljeno == 0);
                if (result != null)
                {
                    result.kolicina += kolicina;
                    context.SaveChanges();
                    return;
                }
                context.kosharica.Add(this);
                context.SaveChanges();
            }
        }


        public static void UkloniStavkuKosarice(int idKosarica)
        {
            using (var context = new CardBringerDBEntities())
            {
                var result = context.kosharica.SingleOrDefault(c => c.idKosarica == idKosarica);
                if (result == null) return;
                context.kosharica.Remove(result);
                context.SaveChanges();
            }
        }

        public static void StavkaKupljenaIliNe(int idKosarica, byte kupljeno)
        {
            using (var context = new CardBringerDBEntities())
            {
                var result = context.kosharica.SingleOrDefault(c => c.idKosarica == idKosarica);
                if (result == null) return;
                result.kupljeno = kupljeno;
                context.SaveChanges();
            }
        }


        public static List<object> DohvatiKosaricu(int kupljeno)
        {
            List<object> lista = new List<object>();
            using (var context = new CardBringerDBEntities())
            {
                var result = context.kosharica
                    .Join(context.korisnik, (o => o.idKorisnika), (p => p.idKorisnika),
                        (o, p) => new {
                            o,
                            p
                        })
                    .Join(context.oglas, r => r.o.idOglas, s => s.idOglas,
                        (r, s) => new {
                            r,
                            s
                        })
                    .Join(context.karta, t => t.s.idKarta, u => u.idKarta,
                        (t, s) => new {
                            s.imeKarte,
                            s.opisKarte,
                            t.s.cijena,
                            t.r.o.kolicina,
                            t.r.p.ime,
                            t.s.idOglas,
                            s.slikaKarte,
                            t.r.o.kupljeno,
                            t.r.o.idKosarica
                        })
                    .Where(c => c.ime == korisnik.PrijavljeniKorisnik.ime && c.kupljeno == kupljeno)
                    .ToList();

                foreach (var r in result)
                {
                    lista.Add(r);
                }
            }
            return lista;
        }
        public virtual korisnik korisnik { get; set; }
        public virtual oglas oglas { get; set; }
    }
}
